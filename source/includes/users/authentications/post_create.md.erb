## Sign in a user

> Request body

```JSON
{
 "data": {
	"type": "users",
	"attributes": {
		"email": "member@example.com",
		"password": "password"
	}
  }
}
```

> HTTP 200 response body

```JSON
{
  "data": {
    "id": "4",
    "type": "users",
    "attributes": {
      "email": "member@example.com",
      "username": "member",
      "role": "member",
      "given_names": null,
      "family_name": null,
      "gender": null,
      "avatar": null,
      "birthday": null,
      "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0LCJ1c2VyX3JvbGUiOiJtZW1iZXIiLCJleHBpcnkiOiIyMDE3LTAzLTA5IDE4OjMzOjQyICswMDAwIn0.XMY0wazu1sSL4ujoUXIi5AG46RJDG2o44y-f7eyK_Fg"
    },
    "relationships": {
      "country": {
        "data": null
      }
    },
    "links": {
      "self": "http://api.dbljump.com/users/4"
    }
  },
  "meta": {
    "last_signed_in_at": "2017-03-08T18:33:42.727Z",
    "last_sign_in_ip": "94.4.193.77",
    "sign_in_count": 1,
    "activated_at": "2017-03-08T17:37:18.448Z"
  }
}
```

Sign in an existing user. With valid credentials, returns a JSON web token (JWT) used to authenticate user requests.

* User authentication: not required
* Authorization level: N/A

### HTTP request

`POST /users/authentications`

### Request attributes

Attribute | Type | Description
--------- | ---- | -----------
email | string | The user's registered email. Required. Max 255 chars. Must be email format.
password | string | The user's password. Required.

### Success HTTP response code

`200 OK`

### Errors

HTTP code | Error code | Pointer | Title | Detail
--------- | ---------- | ------- | ----- | ------
400 | USER_EMAIL_BLANK | email | Email is required.
401 | USER_CREDENTIALS_INVALID | - | User not authorized. | Invalid email and password combination.
